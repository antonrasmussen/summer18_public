We were looking at TLBs last time... there's a picture of that kind of layout for paging hardware on course notes

All pages listed in order... with frame number that matches up.

At end of lecture 11


When page fault occurs:

Set is also valid when dealing with standard I/O blocking call

Test Question: Page Replacement

The example of LRU


Initial load is usally 1/3 . . .  

after the initial loading and playing around, the goal is to be at some steady state eventually where we get few page faults

If the page faults don't fall off the working set is too small => give it more frames

(e.g. Unix has a stash of free frames)... if you continue to have more pg. faults it'll keep adding

MS steals frames from some other user process (not its own).... 


In a 2D array... two ways to store array.... main memory is a one dimensional array.... (remember: there are row maj and col major langs)

Looking at a[i,j] vs a[j,i] . . . do we increment rows or cols?

If stored as row maj lang... store 1, go through cols... store 2, go through cols.. etc.

If this was col maj lang, you have to skip down for page referencing... 

with a big enough array
